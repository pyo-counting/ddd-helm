{{- if .Values.common.ns.enabled }}
{{- range $app := .Values.application -}}
{{- if $app.pv.enabled -}}
apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ $.Values.domainCode }}-{{ $app.name }}-static-pv
  labels:
    {{- include "ddd-helm.commonLabels" $ | nindent 4 }}
    {{- include "ddd-helm.componentLabel" $app | nindent 4 }}
    {{- if $app.pv.labelsTemplate }}
    {{- tpl $app.pv.labelsTemplate $ | nindent 4 }}
    {{- end }}
    {{- if $app.pv.labels }}
    {{- toYaml $app.pv.labels | nindent 4 }}
    {{- end }}
  {{- if or $app.pv.annotationsTemplate $app.pv.annotations }}
  annotations:
    {{- if $app.pv.annotationsTemplate }}
    {{- tpl $app.pv.annotationsTemplate $ | nindent 4 }}
    {{- end }}
    {{- if $app.pv.annotations }}
    {{- toYaml $app.pv.annotations | nindent 4 }}
    {{- end }}
  {{- end }}
spec:
  accessModes:
    {{- toYaml $app.pv.accessMode | nindent 4 }}
  capacity:
    storage: {{ $app.pv.size }}
  claimRef:
    apiVersion: v1
    kind: PersistentVolumeClaim
    name: {{ $.Values.domainCode }}-{{ $app.name }}-static-pvc
    namespace: {{ include "ddd-helm.namespace" $ }}
  {{- if $app.pv.mountOptions}}
  mountOptions:
    {{- toYaml $app.pv.mountOptions | nindent 4 }}
  {{- end }}
  # nodeAffinity:
  persistentVolumeReclaimPolicy: {{ $app.pv.reclaimPolicy }}
  storageClassName: ""
  {{- if $app.pv.volumeMode }}
  volumeMode: {{ $app.pv.volumeMode }}
  {{- end }}
  csi:
    driver: efs.csi.aws.com
    volumeHandle: '{{ $app.pv.awsFileSystemID}}:{{ $app.pv.path }}'
    # controllerExpandSecretRef:
    # controllerPublishSecretRef:
    # fsType:
    # nodeExpandSecretRef:
    # nodePublishSecretRef:
    # nodeStageSecretRef:
    {{- if $app.pv.readOnly }}
    readOnly: {{ $app.pv.readOnly }}
    {{- end }}
---
{{- end -}}
{{- end -}}
{{- end -}}